var num1 = '1234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890' ,
    num

// ?? 大数相加 数字超过语言计算范围
// 在内存中表达 数字型Number Infinity 最后一位， 相加

function addTwoNumer(str1,str2){
    // 1. 字符串从尾部到顶部
    // 2. 两个数的位数不一样
    var carry = 0,//进位 计算每一个回合的进位
        l1 = str1.length,
        l2 = str2.length,
        arr = []; //放结果
    var max = Math.max(l1,l2); //不一样长的
    for(var i = l1-1,j = l2 -1,n = max -1;n >=0;n--,i--,j--){
        var sum = (+str1[i] || 0) + (+str2[j] || 0) + carry;
        // console.log(sum);
        // break;
        if(sum>9){
            carry = 1;
            arr.push(sum-10);
        }else{
            carry =0;
            arr.push(sum);
        }
    }
    if(carry>0){
        arr.push(1);
    }
    return arr.reverse().join('');
}
console.log(addTwoNumer(num1,num2));